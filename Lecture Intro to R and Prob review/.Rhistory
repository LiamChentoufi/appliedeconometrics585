add.lines=list(c("Time FE", "No", "Yes", "Yes", "Yes", "Yes")),
out = "panel_results_long.html")
library("WDI")
library("tidyverse")
setwd("/Users/mkaltenberg/Documents/GitHub/Data_Analysis_Python_R/Advanced Regressions Stargazer/")
wdi <- WDI(country = "all", start=2000, end=2020, extra="TRUE",
indicator=c("NY.GDP.MKTP.KD.ZG","SL.TLF.CACT.FE.ZS","SP.POP.TOTL", "SE.PRM.CUAT.ZS" ))
fixed_tw <- plm(gdp~ edu + log(pop) , data=wdi, index = c("iso2c", "year"), effect = "twoways")
wdi <- rename(wdi,  gdp= NY.GDP.MKTP.KD.ZG, lfpart_f= SL.TLF.CACT.FE.ZS, pop= SP.POP.TOTL, edu = SE.PRM.CUAT.ZS)
names(wdi)
ols <- lm(gdp~edu + log(pop), data=wdi)
library("plm")
fixed <- plm(gdp~  edu + log(pop) , data=wdi, index = c("iso2c"), model="within")
summary(fixed)
#equivalent in stata:
#xtset iso2c year
#xtreg gdp edu lnpop, fe
library("plm")
fixed <- plm(gdp~  edu + log(pop) , data=wdi, index = c("iso2c"), model="within")
summary(fixed)
#equivalent in stata:
#xtset iso2c year
#xtreg gdp edu lnpop, fe
fixed_tw <- plm(gdp~ edu + log(pop) , data=wdi, index = c("iso2c", "year"), effect = "twoways")
fixed <- plm(gdp~ edu + log(pop) + factor(year) , data=wdi, index = c("iso2c"), model="within")
stargazer(fixed,fixed_tw, type='text')
fixef(fixed)
library("fixest")
fixed_est = feols(gdp~  edu + log(pop) | iso2c + year, data = wdi)  ## Fixed effect(s) go after the "|"
fixed_est
summary(fixed_est, se = 'standard')
summary(fixed_est, cluster = c('iso2c'))
re <- plm(gdp~edu + log(pop) + factor(year), data=wdi, index = c("iso2c"), model="random")
summary(re)
fe <- plm(gdp ~ edu +log(pop) +factor(year) , data=wdi, index = c("iso2c"), model="within")
summary(fe)
phtest(fe, re)
setwd("/Users/mkaltenberg/Documents/GitHub/Data_Analysis_Python_R/Advanced Regressions Stargazer/")
smoking <- read.csv("smoking.csv")
names(smoking)
logit <- glm(smoker ~ age + female + hsdrop +hsgrad +colsome +colgrad, data = smoking, family = "binomial")
summary(logit)
probit <- glm(smoker ~ age + female + hsdrop +hsgrad +colsome +colgrad, data = smoking, family = binomial(link = "probit"))
summary(probit)
library(margins)
logit_m <-margins(logit)
plot(logit_m)
logit_range <-margins(logit, at = list(age = c(18,40,60)), variables = "age")
summary(logit_range)
mean_age = mean(smoking$age, na.rm=TRUE)
logit_m <- margins(logit, at = list(age = c(mean(smoking$age, na.rm=TRUE))), variables = "age")
summary(logit_m)
int <- lm(gdp ~ lfpart_f + pop + I(pop^2), data = wdi)
summary(int)
# in python wdi['pop']
m_pop <- mean(wdi$pop, na.rm=TRUE)  # getting the mean of population
int_ape <- margins(int, at = list(pop =m_pop), variables= "pop")
summary(int_ape)
int_ape <-margins(int, at = list(pop = mean(wdi$pop, na.rm=TRUE)))
summary(int_ape)
int_ape <- margins(int, at = list(pop = c(1000000,5000000, 9000000)), variable = "pop")
summary(int_ape)
fivenum(wdi$pop, na.rm= TRUE)  # This is how to get the statistics
int_ape <- margins(int, at = list(pop =fivenum(wdi$pop, na.rm= TRUE)), variable= "pop")
summary(int_ape)#integrated within margins command
cplot(int, "pop", what = "effect", main = "Average Marginal Effect of Population")
library(stargazer)
knitr::opts_chunk$set(echo = TRUE, warning = FALSE)
stargazer(ols, re, fe, type = "html", column.labels = c("OLS", "RE", "FE"),
model.names = FALSE, #remove model names
dep.var.caption = "", #get rid of the dependent variable title at the top
title = "Panel Data Results", #Have a title on your table
covariate.labels = c("Edu", "lnPop", "Constant"), #rename variables to be cleaner
omit = c("year"),  #omit the variables year from the output
dep.var.labels   = "", #get rid of the dependent variable label
model.numbers = FALSE, #get rid of model numbers
add.lines=list(c("Time FE", "No", "Yes", "Yes")), # add a line/row for additional info (in this case about time fixed effects)
notes= "Source: World Development Indicators Database", #add notes on the source of the data
out = "panel_results.html" )#save the file in an output
knitr::opts_chunk$set(echo = TRUE, warning = FALSE)
#long version
fe_ols = lm(gdp~  edu + log(pop) +factor(country) +factor(year), data = wdi, na.action = na.omit)  ## Fixed effect(s)
fe_noyr <- plm(gdp ~ edu +log(pop) , data=wdi, index = c("iso2c"), model="within")
#notice that the coefficients aren't the same. That's because of the way lm() handles missing data. It's better to use plm then factor with lm.
stargazer(fe_noyr,fe, fe_ols, fixed_tw, fixed_est,
type = "html",
column.labels = c("FE_plm", "FE_dum", "FE_plm", "FE_est"),
model.names = FALSE,
dep.var.caption = "",
title = "Panel Data Results",
omit = c("country", "year"),  #So, if we want to remove the fixed effects or estimates, we can use the option, omit (another way to do this is keep, but that has issues with the constant)
covariate.labels = c("Edu", "lnPop", "Constant"),
dep.var.labels   = "GDP per capita",
add.lines=list(c("Time FE", "No", "Yes", "Yes", "Yes", "Yes")),
out = "panel_results_long.html")
knitr::opts_chunk$set(echo = TRUE, warning = FALSE)
#long version
fe_ols = lm(gdp~  edu + log(pop) +factor(country) +factor(year), data = wdi, na.action = na.omit)  ## Fixed effect(s)
fe_noyr <- plm(gdp ~ edu +log(pop) , data=wdi, index = c("iso2c"), model="within")
#notice that the coefficients aren't the same. That's because of the way lm() handles missing data. It's better to use plm then factor with lm.
stargazer(fe_noyr,fe, fe_ols, fixed_tw, fixed_est,
#  type = "html",
# column.labels = c("FE_plm", "FE_dum", "FE_plm", "FE_est"),
#  model.names = FALSE,
#  dep.var.caption = "",
#  title = "Panel Data Results",
#  omit = c("country", "year"),  #So, if we want to remove the fixed effects or estimates, we can use the option, omit (another way to do this is keep, but that has issues with the constant)
# covariate.labels = c("Edu", "lnPop", "Constant"),
#dep.var.labels   = "GDP per capita",
#  add.lines=list(c("Time FE", "No", "Yes", "Yes", "Yes", "Yes")),
out = "panel_results_long.html")
knitr::opts_chunk$set(echo = TRUE, warning = FALSE)
#long version
fe_ols = lm(gdp~  edu + log(pop) +factor(country) +factor(year), data = wdi, na.action = na.omit)  ## Fixed effect(s)
fe_noyr <- plm(gdp ~ edu +log(pop) , data=wdi, index = c("iso2c"), model="within")
#notice that the coefficients aren't the same. That's because of the way lm() handles missing data. It's better to use plm then factor with lm.
stargazer(fe_noyr,fe, fe_ols, fixed_tw, fixed_est,
#  type = "html",
# column.labels = c("FE_plm", "FE_dum", "FE_plm", "FE_est"),
#  model.names = FALSE,
#  dep.var.caption = "",
#  title = "Panel Data Results",
#  omit = c("country", "year"),  #So, if we want to remove the fixed effects or estimates, we can use the option, omit (another way to do this is keep, but that has issues with the constant)
# covariate.labels = c("Edu", "lnPop", "Constant"),
#dep.var.labels   = "GDP per capita",
#  add.lines=list(c("Time FE", "No", "Yes", "Yes", "Yes", "Yes")),
out = "panel_results_long.html")
knitr::opts_chunk$set(echo = TRUE, warning = FALSE)
#long version
fe_ols = lm(gdp~  edu + log(pop) +factor(country) +factor(year), data = wdi, na.action = na.omit)  ## Fixed effect(s)
fe_noyr <- plm(gdp ~ edu +log(pop) , data=wdi, index = c("iso2c"), model="within")
stargazer(fe_noyr,fe, fe_ols, fixed_tw, fixed_est,
#  type = "html",
# column.labels = c("FE_plm", "FE_dum", "FE_plm", "FE_est"),
#  model.names = FALSE,
#  dep.var.caption = "",
#  title = "Panel Data Results",
#  omit = c("country", "year"),  #So, if we want to remove the fixed effects or estimates, we can use the option, omit (another way to do this is keep, but that has issues with the constant)
# covariate.labels = c("Edu", "lnPop", "Constant"),
#dep.var.labels   = "GDP per capita",
#  add.lines=list(c("Time FE", "No", "Yes", "Yes", "Yes", "Yes")),
out = "panel_results_long.html")
stargazer(fe_noyr,fe, fe_ols, fixed_tw, fixed_est)
#  type = "html",
# column.labels = c("FE_plm", "FE_dum", "FE_plm", "FE_est"),
#  model.names = FALSE,
#  dep.var.caption = "",
#  title = "Panel Data Results",
#  omit = c("country", "year"),  #So, if we want to remove the fixed effects or estimates, we can use the option, omit (another way to do this is keep, but that has issues with the constant)
# covariate.labels = c("Edu", "lnPop", "Constant"),
#dep.var.labels   = "GDP per capita",
#  add.lines=list(c("Time FE", "No", "Yes", "Yes", "Yes", "Yes")),
#out = "panel_results_long.html")
library("fixest")
fixed_est = feols(gdp~  edu + log(pop) | iso2c + year, data = wdi)  ## Fixed effect(s) go after the "|"
fixed_est
stargazer(fe_noyr,fe, fe_ols, fixed_tw, fixed_est)
#  type = "html",
# column.labels = c("FE_plm", "FE_dum", "FE_plm", "FE_est"),
#  model.names = FALSE,
#  dep.var.caption = "",
#  title = "Panel Data Results",
#  omit = c("country", "year"),  #So, if we want to remove the fixed effects or estimates, we can use the option, omit (another way to do this is keep, but that has issues with the constant)
# covariate.labels = c("Edu", "lnPop", "Constant"),
#dep.var.labels   = "GDP per capita",
#  add.lines=list(c("Time FE", "No", "Yes", "Yes", "Yes", "Yes")),
#out = "panel_results_long.html")
stargazer(fe_noyr,fe, fe_ols, fixed_tw)
#  type = "html",
# column.labels = c("FE_plm", "FE_dum", "FE_plm", "FE_est"),
#  model.names = FALSE,
#  dep.var.caption = "",
#  title = "Panel Data Results",
#  omit = c("country", "year"),  #So, if we want to remove the fixed effects or estimates, we can use the option, omit (another way to do this is keep, but that has issues with the constant)
# covariate.labels = c("Edu", "lnPop", "Constant"),
#dep.var.labels   = "GDP per capita",
#  add.lines=list(c("Time FE", "No", "Yes", "Yes", "Yes", "Yes")),
#out = "panel_results_long.html")
stargazer(fe_noyr,fe, fe_ols, fixed_tw,
type = "html",
column.labels = c("FE_plm", "FE_dum", "FE_plm", "FE_est"),
model.names = FALSE,
dep.var.caption = "",
title = "Panel Data Results",
omit = c("country", "year"),  #So, if we want to remove the fixed effects or estimates, we can use the option, omit (another way to do this is keep, but that has issues with the constant)
covariate.labels = c("Edu", "lnPop", "Constant"),
dep.var.labels   = "GDP per capita",
add.lines=list(c("Time FE", "No", "Yes", "Yes", "Yes", "Yes")),
out = "panel_results_long.html")
stargazer(fe_noyr,fe, fe_ols, fixed_tw,
type = "html",
column.labels = c("FE_plm", "FE_dum", "FE_plm", "FE_est"),
model.names = FALSE,
dep.var.caption = "",
title = "Panel Data Results",
omit = c("country", "year"),  #So, if we want to remove the fixed effects or estimates, we can use the option, omit (another way to do this is keep, but that has issues with the constant)
covariate.labels = c("Edu", "lnPop", "Constant"),
dep.var.labels   = "GDP per capita",
add.lines=list(c("Time FE", "No", "Yes", "Yes", "Yes")),
out = "panel_results_long.html")
stargazer(fe_noyr,fe, fe_ols, fixed_tw,
type = "html",
column.labels = c("FE_plm", "FE_dum", "FE_plm", "FE_est"),
model.names = FALSE,
dep.var.caption = "",
title = "Panel Data Results",
omit = c("country", "year"),  #So, if we want to remove the fixed effects or estimates, we can use the option, omit (another way to do this is keep, but that has issues with the constant)
#  covariate.labels = c("Edu", "lnPop", "Constant"),
dep.var.labels   = "GDP per capita",
add.lines=list(c("Time FE", "No", "Yes", "Yes", "Yes")),
out = "panel_results_long.html")
stargazer(fe_noyr,fe, fe_ols, fixed_tw,
type = "html",
# column.labels = c("FE_plm", "FE_dum", "FE_plm", "FE_est"),
#  model.names = FALSE,
#  dep.var.caption = "",
#  title = "Panel Data Results",
# omit = c("country", "year"),  #So, if we want to remove the fixed effects or estimates, we can use the option, omit (another way to do this is keep, but that has issues with the constant)
# covariate.labels = c("Edu", "lnPop", "Constant"),
#  dep.var.labels   = "GDP per capita",
# add.lines=list(c("Time FE", "No", "Yes", "Yes", "Yes")),
out = "panel_results_long.html")
stargazer(fe_noyr,fe, fe_ols, fixed_tw,
type = "html",
column.labels = c("one-way FE", "FE plm", "FE dummies", "FE plm"),
#  model.names = FALSE,
#  dep.var.caption = "",
#  title = "Panel Data Results",
# omit = c("country", "year"),  #So, if we want to remove the fixed effects or estimates, we can use the option, omit (another way to do this is keep, but that has issues with the constant)
# covariate.labels = c("Edu", "lnPop", "Constant"),
#  dep.var.labels   = "GDP per capita",
# add.lines=list(c("Time FE", "No", "Yes", "Yes", "Yes")),
out = "panel_results_long.html")
stargazer(fe_noyr,fe, fe_ols, fixed_tw,
type = "html",
column.labels = c("one-way FE", "FE plm", "FE dummies", "FE plm"),
model.names = FALSE,
dep.var.caption = "",
title = "Panel Data Results",
omit = c("country", "year"),  #So, if we want to remove the fixed effects or estimates, we can use the option, omit (another way to do this is keep, but that has issues with the constant)
covariate.labels = c("Edu", "lnPop", "Constant"),
dep.var.labels   = "GDP per capita",
add.lines=list(c("Time FE", "No", "Yes", "Yes", "Yes")),
out = "panel_results_long.html")
# fe, fe_ols,fixed_tw are all different ways to produce the same exact results
stargazer(fe_noyr,fe, fe_ols, fixed_tw,
type = "html",
column.labels = c("one-way FE", "FE plm", "FE dummies", "FE plm"),
model.names = FALSE,
dep.var.caption = "",
title = "Panel Data Results",
omit = c("country", "year"),  #So, if we want to remove the fixed effects or estimates, we can use the option, omit (another way to do this is keep, but that has issues with the constant)
covariate.labels = c("Edu", "lnPop", "Constant"),
dep.var.labels   = "GDP per capita",
add.lines=list(c("Time FE", "No", "Yes", "Yes", "Yes")),
out = "panel_results_long.html")
summary(fixed_est)
# fe, fe_ols,fixed_tw are all different ways to produce the same exact results
stargazer(fe_noyr,fe, fe_ols, fixed_tw,
type = "html",
column.labels = c("one-way FE", "FE plm", "FE dummies", "FE plm"),
model.names = FALSE,
dep.var.caption = "",
title = "Panel Data Results",
omit = c("country", "year"),  #So, if we want to remove the fixed effects or estimates, we can use the option, omit (another way to do this is keep, but that has issues with the constant)
covariate.labels = c("Edu", "lnPop", "Constant"),
dep.var.labels   = "GDP per capita",
add.lines=list(c("Time FE", "No", "Yes", "Yes", "Yes")),
out = "panel_results_long.html")
fixed_est
# fe, fe_ols,fixed_tw are all different ways to produce the same exact results
stargazer(fe_noyr,fe, fe_ols, fixed_tw,
type = "html",
column.labels = c("one-way FE", "FE plm", "FE dummies", "FE plm"),
model.names = FALSE,
dep.var.caption = "",
title = "Panel Data Results",
omit = c("country", "year"),  #So, if we want to remove the fixed effects or estimates, we can use the option, omit (another way to do this is keep, but that has issues with the constant)
covariate.labels = c("Edu", "lnPop", "Constant"),
dep.var.labels   = "GDP per capita",
add.lines=list(c("Time FE", "No", "Yes", "Yes", "Yes")),
out = "panel_results_long.html")
#You can also use fixed est, but it doesn't play well with stargazer
stargazer(fixed_est)
# fe, fe_ols,fixed_tw are all different ways to produce the same exact results
stargazer(fe_noyr,fe, fe_ols, fixed_tw,
type = "html",
column.labels = c("one-way FE", "FE plm", "FE dummies", "FE plm"),
model.names = FALSE,
dep.var.caption = "",
title = "Panel Data Results",
omit = c("country", "year"),  #So, if we want to remove the fixed effects or estimates, we can use the option, omit (another way to do this is keep, but that has issues with the constant)
covariate.labels = c("Edu", "lnPop", "Constant"),
dep.var.labels   = "GDP per capita",
add.lines=list(c("Time FE", "No", "Yes", "Yes", "Yes")),
out = "panel_results_long.html")
#You can also use fixed est, but it doesn't play well with stargazer
fixed_est
setwd("/Users/mkaltenberg/Documents/GitHub/Presentation and Final Project-05-11-2023-11-18-20/Heirsweeney/Sweeney Opoku Project/")
ngacorruptdata <- read_csv("nigeriadata.csv")
library(readr)
library(dplyr)
library(tidyverse)
library(stargazer)
ngacorruptdata <- read_csv("nigeriadata.csv")
reg1 = lm(Cpiscore ~ inflation_rate + govexp + realgdp + Population, data = ngacorruptdata)
summary(reg1)
#Second regression using the log of real gdp.
reg2 = lm(Cpiscore ~ inflation_rate + govexp + Population + log_realgdp, data = ngacorruptdata)
summary(reg2)
#Here, I am using the stargazer package to print my results to the 2 regressions that i run nicely in a table so it is easily readable and then export it.
stargazer(reg1, reg2, type = "text", title = "Regression Results")
stargazer()
stargazer(reg1, reg2, type = "html", out = "regression.html" ,title = "My models")
library(stargazer)
library(tidyverse)
bitcoin_data <- read.csv('eco590_project_data.csv')
bspy <- lm(cov_bspy ~  vix/covid + tbill/covid + btc_garch +
gg_trend_wrld, data = bitcoin_data)
bgld <- lm(cov_bgld ~  vix/covid + tbill/covid + btc_garch +
gg_trend_wrld, data = bitcoin_data)
busd <- lm(cov_busd ~  vix/covid + tbill/covid + btc_garch +
gg_trend_wrld, data = bitcoin_data)
stargazer(bspy, bgld, busd, type = "text",
title = 'Regressions Result',
omit.table.layout = "l",
model.numbers = FALSE,
covariate.labels = c("vix", "3-month Tbill", "bitcoin volatility", "bitcoin popularity",
"vix during covid",
"3-month Tbill during covid","Constant"),
notes= "Sorce: Yahoo Finance, NYU V-lab, Aplhavantage, Google Trends",
out = "bitcoin_result.html")
#I library any packages that I think that I will need to use
library(dplyr)
library(tidytuesdayR)
install.packages("tidytuesdayR")
#I library any packages that I think that I will need to use
library(dplyr)
library(tidytuesdayR)
library(stargazer)
#here I ran my regression. I used  Prices as the
#dependent variable and the rest of the variables in the model,
#I used the factor(Genre) code to indicate that Genre is a categorical variable
#I also set all the data to data
reg1 <- lm(Prices ~ Runtimes + Ratings + factor(Genre), data = data)
#QUESTION 2
#Here I imported my csv file to the variable data
data <- read.csv("audible_data.csv")
#Here I made sure to set my working directory to my folder on my desktop
setwd('/Users/mkaltenberg/Documents/GitHub/Presentation and Final Project-05-11-2023-11-18-20/KellyStephen17/')
#QUESTION 2
#Here I imported my csv file to the variable data
data <- read.csv("audible_data.csv")
#QUESTION 2
#Here I imported my csv file to the variable data
data <- read.csv("audibledata.csv")
#here I ran my regression. I used  Prices as the
#dependent variable and the rest of the variables in the model,
#I used the factor(Genre) code to indicate that Genre is a categorical variable
#I also set all the data to data
reg1 <- lm(Prices ~ Runtimes + Ratings + factor(Genre), data = data)
# Loading the required packages
library(dplyr)
library(tidyverse)
library(estimatr)
library(Rcpp)
library(stargazer)
#setting working directory
#setwd("/Users/nbenedetto2000/Desktop/DA FINAL PROJ")
#read the csv file "football.csv" that I scraped using Python
pro_football <- read.csv("football.csv")
# Viewing data to verify data types and data
head(pro_football)
# Creating the first regression model using Yards (Yds) as dependent variable and Touchdowns (TD), Age, and Completions as independent variables.
# To answer the question on the effect of the independent variables on the dependent variable?
ols <- lm(Yds ~ TD + Age + Cmp, data = pro_football)
summary(ols)
# log number of reviews. group locations into 5 b
# Creating a subset of the data by filtering to have players aged 18 to 40
pro_football_m <- pro_football[pro_football$Age >= 18 & pro_football$Age <= 40, ]
# Model 2
ols_m <- lm(Yds ~ TD + Age + Cmp, data = pro_football_m)
summary(ols_m)
stargazer(ols, type = "html", title = "OLS Model 1 Results",
dep.var.labels = "Yds",
covariate.labels = c("TD","Age","Cmp"),
align = TRUE)
library(stargazer)
#setwd("your/path/here")
#import the data csv with the read function and name it data
data = read.csv("data.csv")
#create a new data set with subset function that will exclude this date
data_sub <- subset(data, Date != "2020-04-01")
#remove scientific notation
options(scipen = 100)
#Lecture 10 & weekly task 6 & things leanred for the fed team
#Using the data, used mutate function to create a new varibale called recession. Used the if else to create a condition with the following parameter. If the my date is "during the recession period" then in the new column write 1, if it's not write 0
#IF ELSE LINK https://www.educative.io/answers/what-is-the-ifelse-function-in-r
#as.Date LEANRED IN THE FED TEAM
#create a new dataset named data_rec, usind data from from data for the variables that Recession == "1"
#run the regression using the new data set I created
data_sub <- data_sub %>%
mutate(Recession = ifelse(Date >= as.Date("2007-12-01") & Date <= as.Date("2009-06-01") |
Date >= as.Date("2020-02-01") & Date <= as.Date("2020-04-01"), "1", "0"))
data_rec <- data_sub %>% filter(Recession == "1")
reg2 <- lm(Productivity ~ Unemployment.Rate + LFPR + GDP + Investment  , data = data_rec)
#run reg3 using the log of productivity
#tuned off the scientific notation so that teh results will show up only as values
reg3 <- lm(log(Productivity) ~ Unemployment.Rate + LFPR + GDP + log(Investment) + Recession , data = data_sub)
#Stargezer to make it into a pretty table
#included reg1,2,3., Changed the name of my column labels, type is html, the name that will be exported in my file wil be table using out, and it will have a Regression Summary title
#dependent variable labels will NOT be included in the regression table
# model should  NOT be numbered
#stargazer Link https://cran.r-project.org/web/packages/stargazer/stargazer.pdf
stargazer(reg1, reg2, reg3,
column.labels = c("Productivity", "Productivity During Recession", "Log"),
type = "html",
out = "table.html",
dep.var.labels.include = FALSE,
model.numbers = FALSE ,
title = "Regression Summary")
# necessary packages
library(dplyr)
library(tidyverse)
library(estimatr)
library(Rcpp)
library(stargazer)
#setting working directory
setwd("your/path/here")
#setting working directory
#setwd("your/path/here")
#read the csv file "yelp.csv" that I scraped using Python
yelp <- read.csv("yelp.csv")
#remove scientific notation
options(scipen = 100)
ols <- lm(Rating ~ Price.Range + log(Number.of.Reviews) + Borough, data = yelp)
summary(ols)
# log number of reviews. group locations into 5 b
yelp_m <- yelp[yelp$Borough == "Manhattan",]
ols_m <- lm(Rating ~ Price.Range + log(Number.of.Reviews), data = yelp_m)
summary(ols_m)
install.packages("janitor")
library(tidyverse)
library(stargazer)
library(dplyr)
library(janitor)
tweets<- read_csv("finallyfinished4.csv")
knitr::opts_chunk$set(echo = TRUE)
library(wooldridge)
data("jtrain98")
simplediff <- lm(earn98 ~ train, data = jtrain98)
summary(simplediff)
conditionalx<- lm(earn98 ~ train+earn96+educ+age+married, data = jtrain98)
summary(conditionalx)
data("jtrain98")
#I'm going to create all my controls to be demeaned with mutate
earn98demean <-mutate(jtrain98, mean_earn96_adj  = earn96-mean(jtrain98$earn96), mean_educ_adj = educ-mean(jtrain98$edu), mean_age_adj = age-mean(jtrain98$age), mean_marr_adj = married-mean(jtrain98$married))
library(dplyr)
data("jtrain98")
#I'm going to create all my controls to be demeaned with mutate
earn98demean <- mutate(jtrain98, mean_earn96_adj= earn96-mean(jtrain98$earn96), mean_educ_adj = educ-mean(jtrain98$edu), mean_age_adj = age-mean(jtrain98$age), mean_marr_adj = married-mean(jtrain98$married))
#interact treatment with my controls
vary_treatment<- lm(earn98 ~ train+ train*mean_educ_adj+train*mean_age_adj+train*mean_marr_adj+train*mean_earn96_adj, data = earn98demean)
summary(vary_treatment)
```{r}
```{r}
library(dplyr)
options("repos" = c(CRAN = "http://lib.stat.cmu.edu/R/CRAN/"))
library(dplyr)
```{r}
getwd()
setwd('/Users/mkaltenberg/Dropbox (Personal)/Pace/ECO585/R notebooks')
getwd()
x <- 'hi there!'
x
y = 'bye'
```{r}
```{r}
x <- 'hi there!'
x
y = 'bye'
```{r}
(y <- seq(0, 10, 2))
```{r}
```{r}
setwd('/Users/mkaltenberg/Documents/GitHub/Data_Analysis_Python_R/Becoming a Viz Kid/')
read.csv('job-automation-probability.csv')
#Don't forget to assign it!
jobs <- read.csv('job-automation-probability.csv')
read.csv("/Users/mkaltenberg/Documents/GitHub/Data_Analysis_Python_R/Becoming a Viz Kid/job-automation-probability.csv")
jobs <- read.csv('job-automation-probability.csv')
```{r}
library(readr)
jobs_2 = read_csv('job-automation-probability.csv')
# IF you want to specify the delimiter
jobs_2 = read_delim('job-automation-probability.csv',  delim = ',')
library(haven)
```
library(haven)
read.csv('job-automation-probability.csv')
#Don't forget to assign it!
jobs <- read.csv('job-automation-probability.csv')
```{r}
names(jobs)
jobs %>% select(c('X_...code', 'prob', 'Average.annual.wage',
'education', 'numbEmployed'))
# A more simplified way to do this is:
```{r}
select(jobs, c('X_...code', 'prob', 'Average.annual.wage',
'education', 'numbEmployed'))
```{r}
setwd("/Users/mkaltenberg/Documents/GitHub/appliedeconometrics585/Lecture Intro to R and Prob review/")
